INFO:root:----------
INFO:root:epoch 1/100
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:1/519, train_loss: 0.9847, step time: 5.9427
INFO:root:2/519, train_loss: 0.9894, step time: 0.4559
Shape Inputs:  torch.Size([1, 4, 218, 224, 144])
Traceback (most recent call last):
  File "/home/psalmon/SegResNet-UPENN/GBM_Seg_UPENN/train_with_upenn.py", line 427, in <module>
    main(config_train)
  File "/home/psalmon/SegResNet-UPENN/GBM_Seg_UPENN/train_with_upenn.py", line 322, in main
    outputs = model(inputs)
  File "/home/psalmon/SegResNet-UPENN/.venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/psalmon/SegResNet-UPENN/.venv/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/psalmon/SegResNet-UPENN/.venv/lib/python3.10/site-packages/monai/networks/nets/segresnet.py", line 183, in forward
    x = self.decode(x, down_x)
  File "/home/psalmon/SegResNet-UPENN/.venv/lib/python3.10/site-packages/monai/networks/nets/segresnet.py", line 171, in decode
    x = up(x) + down_x[i + 1]
  File "/home/psalmon/SegResNet-UPENN/.venv/lib/python3.10/site-packages/monai/data/meta_tensor.py", line 276, in __torch_function__
    ret = super().__torch_function__(func, types, args, kwargs)
  File "/home/psalmon/SegResNet-UPENN/.venv/lib/python3.10/site-packages/torch/_tensor.py", line 1418, in __torch_function__
    ret = func(*args, **kwargs)
RuntimeError: The size of tensor a (56) must match the size of tensor b (55) at non-singleton dimension 2