INFO:root:----------
INFO:root:epoch 1/200
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:1/519, train_loss: 0.9785, step time: 21.0541
INFO:root:2/519, train_loss: 0.9913, step time: 0.6679
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:3/519, train_loss: 0.9887, step time: 0.6570
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:4/519, train_loss: 0.9864, step time: 0.6564
INFO:root:5/519, train_loss: 0.9806, step time: 0.6704
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:6/519, train_loss: 0.9586, step time: 0.6648
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:7/519, train_loss: 0.9705, step time: 0.6802
INFO:root:8/519, train_loss: 0.9788, step time: 0.6610
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:9/519, train_loss: 0.9742, step time: 0.6944
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:10/519, train_loss: 0.9863, step time: 0.6723
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:11/519, train_loss: 0.9879, step time: 0.6441
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:12/519, train_loss: 0.9715, step time: 0.6554
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:13/519, train_loss: 0.9464, step time: 0.7094
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:14/519, train_loss: 0.9862, step time: 0.6684
INFO:root:15/519, train_loss: 0.9866, step time: 0.6453
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:16/519, train_loss: 0.9469, step time: 0.7191
INFO:root:17/519, train_loss: 0.9884, step time: 0.6648
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:18/519, train_loss: 0.9343, step time: 0.6588
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:19/519, train_loss: 0.9545, step time: 0.6667
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:20/519, train_loss: 0.9746, step time: 0.6782
INFO:root:21/519, train_loss: 0.9942, step time: 0.6758
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:22/519, train_loss: 0.9805, step time: 0.6770
INFO:root:23/519, train_loss: 0.9749, step time: 0.6907
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:24/519, train_loss: 0.9950, step time: 0.6834
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:25/519, train_loss: 0.9763, step time: 0.6549
INFO:root:26/519, train_loss: 0.9408, step time: 0.6898
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:27/519, train_loss: 0.9824, step time: 0.6967
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:28/519, train_loss: 0.9486, step time: 0.6568
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:29/519, train_loss: 0.9936, step time: 0.6840
INFO:root:30/519, train_loss: 0.9905, step time: 0.6320
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:31/519, train_loss: 0.9806, step time: 0.6820
INFO:root:32/519, train_loss: 0.9569, step time: 0.6659
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:33/519, train_loss: 0.9572, step time: 0.6543
INFO:root:34/519, train_loss: 0.9450, step time: 0.7376
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:35/519, train_loss: 0.9438, step time: 0.7114
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:36/519, train_loss: 0.9351, step time: 0.6493
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:37/519, train_loss: 0.9638, step time: 0.7121
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:38/519, train_loss: 0.9724, step time: 0.7193
INFO:root:39/519, train_loss: 0.9770, step time: 0.6568
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:40/519, train_loss: 0.9661, step time: 0.6442
INFO:root:41/519, train_loss: 0.9743, step time: 0.6803
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:42/519, train_loss: 0.9956, step time: 0.6723
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:43/519, train_loss: 0.9828, step time: 0.6657
INFO:root:44/519, train_loss: 0.9580, step time: 0.6605
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:45/519, train_loss: 0.9934, step time: 0.6664
INFO:root:46/519, train_loss: 0.9638, step time: 0.6549
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:47/519, train_loss: 0.9587, step time: 0.6258
INFO:root:48/519, train_loss: 0.9633, step time: 0.5978
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:49/519, train_loss: 0.9090, step time: 0.5767
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:50/519, train_loss: 0.9156, step time: 0.5890
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:51/519, train_loss: 0.9524, step time: 0.5927
INFO:root:52/519, train_loss: 0.9254, step time: 0.5858
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:53/519, train_loss: 0.9465, step time: 0.5965
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:54/519, train_loss: 0.9784, step time: 0.6043
INFO:root:55/519, train_loss: 0.9496, step time: 0.5638
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:56/519, train_loss: 0.9674, step time: 0.5820
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:57/519, train_loss: 0.9539, step time: 0.6571
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:58/519, train_loss: 0.9722, step time: 0.5912
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:59/519, train_loss: 0.9460, step time: 0.5800
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:60/519, train_loss: 0.9729, step time: 0.5777
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:61/519, train_loss: 0.9955, step time: 0.5525
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:62/519, train_loss: 0.9360, step time: 0.5607
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:63/519, train_loss: 0.9298, step time: 0.5568
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:64/519, train_loss: 0.9612, step time: 0.5961
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:65/519, train_loss: 0.9520, step time: 0.5132
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:66/519, train_loss: 0.9276, step time: 0.5601
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:67/519, train_loss: 0.9822, step time: 0.6268
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:68/519, train_loss: 0.9278, step time: 0.5558
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:69/519, train_loss: 0.9511, step time: 0.5695
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:70/519, train_loss: 0.9787, step time: 0.5655
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:71/519, train_loss: 0.9566, step time: 0.5789
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:72/519, train_loss: 0.9219, step time: 0.5525
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:73/519, train_loss: 0.9251, step time: 0.6006
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:74/519, train_loss: 0.9573, step time: 0.5942
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:75/519, train_loss: 0.9622, step time: 0.6059
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:76/519, train_loss: 0.9945, step time: 0.5472
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:77/519, train_loss: 0.9637, step time: 0.6019
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:78/519, train_loss: 0.9730, step time: 0.6496
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:79/519, train_loss: 0.9396, step time: 0.6220
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:80/519, train_loss: 0.9383, step time: 0.5962
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:81/519, train_loss: 0.9807, step time: 0.6161
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:82/519, train_loss: 0.9497, step time: 0.5700
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:83/519, train_loss: 0.9841, step time: 0.5843
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:84/519, train_loss: 0.9701, step time: 0.5908
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:85/519, train_loss: 0.8992, step time: 0.5354
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:86/519, train_loss: 0.9766, step time: 0.6158
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:87/519, train_loss: 0.9241, step time: 0.6948
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:88/519, train_loss: 0.9714, step time: 0.6879
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:89/519, train_loss: 0.9640, step time: 0.6606
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:90/519, train_loss: 0.9589, step time: 0.6480
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:91/519, train_loss: 0.9653, step time: 0.6422
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:92/519, train_loss: 0.9871, step time: 0.6729
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:93/519, train_loss: 0.9965, step time: 0.6775
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:94/519, train_loss: 0.9658, step time: 0.6856
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:95/519, train_loss: 0.9480, step time: 0.7152
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:96/519, train_loss: 0.9579, step time: 0.6727
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:97/519, train_loss: 0.9289, step time: 0.7468
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:98/519, train_loss: 0.9675, step time: 0.6887
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:99/519, train_loss: 0.9771, step time: 0.6670
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:100/519, train_loss: 0.9081, step time: 0.6862
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:101/519, train_loss: 0.9199, step time: 0.7131
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:102/519, train_loss: 0.9070, step time: 0.6402
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:103/519, train_loss: 0.9376, step time: 0.6576
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:104/519, train_loss: 0.9534, step time: 0.6931
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:105/519, train_loss: 0.9397, step time: 0.5927
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:106/519, train_loss: 0.8825, step time: 0.7170
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:107/519, train_loss: 0.9452, step time: 0.6942
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:108/519, train_loss: 0.9111, step time: 0.6588
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:109/519, train_loss: 0.9489, step time: 0.6700
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:110/519, train_loss: 0.9183, step time: 0.6903
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:111/519, train_loss: 0.9441, step time: 0.6748
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:112/519, train_loss: 0.9655, step time: 0.6449
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:113/519, train_loss: 0.9802, step time: 0.7093
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:114/519, train_loss: 0.9542, step time: 0.6536
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:115/519, train_loss: 0.9433, step time: 0.6533
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:116/519, train_loss: 0.9474, step time: 0.7263
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:117/519, train_loss: 0.9741, step time: 0.6510
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:118/519, train_loss: 0.9742, step time: 0.6613
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:119/519, train_loss: 0.9428, step time: 0.6240
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:120/519, train_loss: 0.9034, step time: 0.6374
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:121/519, train_loss: 0.9518, step time: 0.6228
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:122/519, train_loss: 0.9627, step time: 0.6883
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:123/519, train_loss: 0.9378, step time: 0.6647
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:124/519, train_loss: 0.9079, step time: 0.6747
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:125/519, train_loss: 0.9715, step time: 0.6600
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:126/519, train_loss: 0.9445, step time: 0.6848
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:127/519, train_loss: 0.9502, step time: 0.6657
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:128/519, train_loss: 0.9571, step time: 0.6863
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:129/519, train_loss: 0.9213, step time: 0.6764
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:130/519, train_loss: 0.9879, step time: 0.6707
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:131/519, train_loss: 0.9862, step time: 0.5882
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:132/519, train_loss: 0.9803, step time: 0.6232
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:133/519, train_loss: 0.9610, step time: 0.6461
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:134/519, train_loss: 0.9282, step time: 0.5984
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:135/519, train_loss: 0.9168, step time: 0.6022
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:136/519, train_loss: 0.9615, step time: 0.6249
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:137/519, train_loss: 0.9653, step time: 0.5964
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:138/519, train_loss: 0.9624, step time: 0.5831
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:139/519, train_loss: 0.9211, step time: 0.6262
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:140/519, train_loss: 0.9463, step time: 0.5965
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:141/519, train_loss: 0.9410, step time: 0.5821
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:142/519, train_loss: 0.9514, step time: 0.6071
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:143/519, train_loss: 0.9854, step time: 0.6116
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:144/519, train_loss: 0.9623, step time: 0.6449
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:145/519, train_loss: 0.9222, step time: 0.6006
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:146/519, train_loss: 0.9185, step time: 0.6017
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:147/519, train_loss: 0.9309, step time: 0.6070
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:148/519, train_loss: 0.9712, step time: 0.6070
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:149/519, train_loss: 0.9073, step time: 0.5995
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:150/519, train_loss: 0.9526, step time: 0.5959
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:151/519, train_loss: 0.9829, step time: 0.6174
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:152/519, train_loss: 0.9373, step time: 0.6181
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:153/519, train_loss: 0.9223, step time: 0.5974
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:154/519, train_loss: 0.9676, step time: 0.5583
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:155/519, train_loss: 0.9174, step time: 0.6395
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:156/519, train_loss: 0.9746, step time: 0.5815
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:157/519, train_loss: 0.9565, step time: 0.6224
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:158/519, train_loss: 0.9707, step time: 0.5618
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:159/519, train_loss: 0.9727, step time: 0.6039
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:160/519, train_loss: 0.9434, step time: 0.5989
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:161/519, train_loss: 0.9784, step time: 0.6279
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:162/519, train_loss: 0.9791, step time: 0.5966
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:163/519, train_loss: 0.9427, step time: 0.6946
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:164/519, train_loss: 0.9558, step time: 0.6181
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:165/519, train_loss: 0.9777, step time: 0.6107
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:166/519, train_loss: 0.9347, step time: 0.6081
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:167/519, train_loss: 0.9541, step time: 0.6111
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:168/519, train_loss: 0.9185, step time: 0.5737
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:169/519, train_loss: 0.9827, step time: 0.6001
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:170/519, train_loss: 0.9799, step time: 0.6103
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:171/519, train_loss: 0.9291, step time: 0.6021
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:172/519, train_loss: 0.9593, step time: 0.6301
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:173/519, train_loss: 0.9778, step time: 0.6294
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:174/519, train_loss: 0.9575, step time: 0.6218
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:175/519, train_loss: 0.9184, step time: 0.5781
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:176/519, train_loss: 0.9787, step time: 0.5985
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:177/519, train_loss: 0.9465, step time: 0.6130
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:178/519, train_loss: 0.9956, step time: 0.5778
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:179/519, train_loss: 0.9752, step time: 0.6107
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:180/519, train_loss: 0.9616, step time: 0.6786
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:181/519, train_loss: 0.9624, step time: 0.6893
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:182/519, train_loss: 0.9284, step time: 0.6815
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:183/519, train_loss: 0.9495, step time: 0.6476
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:184/519, train_loss: 0.9901, step time: 0.6463
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:185/519, train_loss: 0.9739, step time: 0.6995
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:186/519, train_loss: 0.9624, step time: 0.6957
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:187/519, train_loss: 0.9530, step time: 0.6835
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:188/519, train_loss: 0.9225, step time: 0.6625
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:189/519, train_loss: 0.9887, step time: 0.6766
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:190/519, train_loss: 0.9729, step time: 0.6476
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:191/519, train_loss: 0.9698, step time: 0.6619
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:192/519, train_loss: 0.9036, step time: 0.6913
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:193/519, train_loss: 0.9860, step time: 0.7448
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:194/519, train_loss: 0.9932, step time: 0.6797
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:195/519, train_loss: 0.9776, step time: 0.7253
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:196/519, train_loss: 0.9325, step time: 0.6006
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:197/519, train_loss: 0.9922, step time: 0.7036
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:198/519, train_loss: 0.9819, step time: 0.6520
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:199/519, train_loss: 0.9547, step time: 0.6686
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:200/519, train_loss: 0.9403, step time: 0.6819
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:201/519, train_loss: 0.9489, step time: 0.6524
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:202/519, train_loss: 0.9093, step time: 0.6518
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:203/519, train_loss: 0.9216, step time: 0.7027
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:204/519, train_loss: 0.8811, step time: 0.6668
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:205/519, train_loss: 0.9775, step time: 0.6606
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:206/519, train_loss: 0.9491, step time: 0.7000
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:207/519, train_loss: 0.9492, step time: 0.6615
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:208/519, train_loss: 0.9263, step time: 0.6695
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:209/519, train_loss: 0.9558, step time: 0.6723
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:210/519, train_loss: 0.9119, step time: 0.7348
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:211/519, train_loss: 0.9809, step time: 0.6712
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:212/519, train_loss: 0.9362, step time: 0.6960
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:213/519, train_loss: 0.9232, step time: 0.7039
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:214/519, train_loss: 0.9371, step time: 0.7344
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:215/519, train_loss: 0.9753, step time: 0.6787
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:216/519, train_loss: 0.8953, step time: 0.6205
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:217/519, train_loss: 0.9569, step time: 0.6452
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:218/519, train_loss: 0.9372, step time: 0.6466
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:219/519, train_loss: 0.9685, step time: 0.6549
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:220/519, train_loss: 0.9246, step time: 0.7011
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:221/519, train_loss: 0.9249, step time: 0.7482
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:222/519, train_loss: 0.9851, step time: 0.6923
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:223/519, train_loss: 0.9660, step time: 0.7657
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:224/519, train_loss: 0.9604, step time: 0.6682
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:225/519, train_loss: 0.9558, step time: 0.6333
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:226/519, train_loss: 0.9835, step time: 0.6211
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:227/519, train_loss: 0.9252, step time: 0.5920
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:228/519, train_loss: 0.9627, step time: 0.6208
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:229/519, train_loss: 0.9960, step time: 0.6061
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:230/519, train_loss: 0.9424, step time: 0.6301
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:231/519, train_loss: 0.9874, step time: 0.6592
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:232/519, train_loss: 0.9603, step time: 0.6116
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:233/519, train_loss: 0.9589, step time: 0.6139
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:234/519, train_loss: 0.9778, step time: 0.6180
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:235/519, train_loss: 0.9181, step time: 0.5810
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:236/519, train_loss: 0.9664, step time: 0.5861
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:237/519, train_loss: 0.9683, step time: 0.5897
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:238/519, train_loss: 0.9272, step time: 0.5928
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:239/519, train_loss: 0.9122, step time: 0.6105
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:240/519, train_loss: 0.9398, step time: 0.6664
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:241/519, train_loss: 0.9793, step time: 0.6037
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:242/519, train_loss: 0.9542, step time: 0.6606
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:243/519, train_loss: 0.9773, step time: 0.6200
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:244/519, train_loss: 0.9625, step time: 0.6447
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:245/519, train_loss: 0.9729, step time: 0.6518
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:246/519, train_loss: 0.9271, step time: 0.6111
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:247/519, train_loss: 0.9646, step time: 0.5977
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:248/519, train_loss: 0.9822, step time: 0.6305
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:249/519, train_loss: 0.9021, step time: 0.5924
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:250/519, train_loss: 0.9644, step time: 0.6059
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:251/519, train_loss: 0.9639, step time: 0.5877
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:252/519, train_loss: 0.9680, step time: 0.6023
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:253/519, train_loss: 0.9928, step time: 0.5763
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:254/519, train_loss: 0.9043, step time: 0.5643
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:255/519, train_loss: 0.9836, step time: 0.5967
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:256/519, train_loss: 0.9955, step time: 0.5806
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:257/519, train_loss: 0.9579, step time: 0.5741
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:258/519, train_loss: 0.9332, step time: 0.5702
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:259/519, train_loss: 0.9433, step time: 0.6095
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:260/519, train_loss: 0.9270, step time: 0.5971
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:261/519, train_loss: 0.9004, step time: 0.6093
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:262/519, train_loss: 0.9463, step time: 0.6080
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:263/519, train_loss: 0.9731, step time: 0.6084
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:264/519, train_loss: 0.9505, step time: 0.6307
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:265/519, train_loss: 0.9760, step time: 0.6144
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:266/519, train_loss: 0.9222, step time: 0.5958
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:267/519, train_loss: 0.9798, step time: 0.5938
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:268/519, train_loss: 0.9679, step time: 0.6093
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:269/519, train_loss: 0.9145, step time: 0.6070
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:270/519, train_loss: 0.9378, step time: 0.6302
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:271/519, train_loss: 0.9880, step time: 0.5642
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:272/519, train_loss: 0.9458, step time: 0.6110
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:273/519, train_loss: 0.9670, step time: 0.6930
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:274/519, train_loss: 0.9204, step time: 0.6880
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:275/519, train_loss: 0.9072, step time: 0.6554
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:276/519, train_loss: 0.9533, step time: 0.6473
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:277/519, train_loss: 0.8968, step time: 0.6919
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:278/519, train_loss: 0.9857, step time: 0.7511
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:279/519, train_loss: 0.9413, step time: 0.7411
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:280/519, train_loss: 0.9827, step time: 0.6745
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:281/519, train_loss: 0.9492, step time: 0.6692
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:282/519, train_loss: 0.9302, step time: 0.6699
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:283/519, train_loss: 0.9065, step time: 0.6579
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:284/519, train_loss: 0.9849, step time: 0.6202
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:285/519, train_loss: 0.9239, step time: 0.6579
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:286/519, train_loss: 0.9417, step time: 0.7197
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:287/519, train_loss: 0.9143, step time: 0.6893
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:288/519, train_loss: 0.9349, step time: 0.6706
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:289/519, train_loss: 0.9015, step time: 0.6654
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:290/519, train_loss: 0.9688, step time: 0.6685
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:291/519, train_loss: 0.9657, step time: 0.7098
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:292/519, train_loss: 0.9199, step time: 0.7154
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:293/519, train_loss: 0.9934, step time: 0.6799
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:294/519, train_loss: 0.9474, step time: 0.7156
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:295/519, train_loss: 0.9113, step time: 0.6981
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:296/519, train_loss: 0.9528, step time: 0.6715
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:297/519, train_loss: 0.9628, step time: 0.7126
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:298/519, train_loss: 0.8873, step time: 0.6660
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:299/519, train_loss: 0.8889, step time: 0.6985
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:300/519, train_loss: 0.9155, step time: 0.7042
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:301/519, train_loss: 0.9395, step time: 0.7174
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:302/519, train_loss: 0.9396, step time: 0.7028
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:303/519, train_loss: 0.9449, step time: 0.6724
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:304/519, train_loss: 0.9157, step time: 0.5984
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:305/519, train_loss: 0.9267, step time: 0.7139
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:306/519, train_loss: 0.8952, step time: 0.6566
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:307/519, train_loss: 0.9330, step time: 0.6953
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:308/519, train_loss: 0.9743, step time: 0.6923
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:309/519, train_loss: 0.9836, step time: 0.7104
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:310/519, train_loss: 0.9347, step time: 0.6553
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:311/519, train_loss: 0.9156, step time: 0.7020
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:312/519, train_loss: 0.9782, step time: 0.7053
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:313/519, train_loss: 0.9514, step time: 0.7569
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:314/519, train_loss: 0.9181, step time: 0.6302
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:315/519, train_loss: 0.9966, step time: 0.6548
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:316/519, train_loss: 0.9427, step time: 0.6683
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:317/519, train_loss: 0.9275, step time: 0.6593
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:318/519, train_loss: 0.8961, step time: 0.6949
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:319/519, train_loss: 0.9296, step time: 0.7113
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:320/519, train_loss: 0.8695, step time: 0.6884
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:321/519, train_loss: 0.9619, step time: 0.6778
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:322/519, train_loss: 0.9389, step time: 0.6486
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:323/519, train_loss: 0.9800, step time: 0.6018
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:324/519, train_loss: 0.9653, step time: 0.6107
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:325/519, train_loss: 0.9419, step time: 0.5822
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:326/519, train_loss: 0.8875, step time: 0.6406
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:327/519, train_loss: 0.8928, step time: 0.6070
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:328/519, train_loss: 0.9645, step time: 0.5895
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:329/519, train_loss: 0.9828, step time: 0.5898
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:330/519, train_loss: 0.9383, step time: 0.6271
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:331/519, train_loss: 0.9807, step time: 0.6314
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:332/519, train_loss: 0.9933, step time: 0.6310
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:333/519, train_loss: 0.9583, step time: 0.6188
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:334/519, train_loss: 0.9415, step time: 0.6224
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:335/519, train_loss: 0.9440, step time: 0.5990
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:336/519, train_loss: 0.9545, step time: 0.6113
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:337/519, train_loss: 0.9254, step time: 0.5983
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:338/519, train_loss: 0.9915, step time: 0.5856
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:339/519, train_loss: 0.9619, step time: 0.6044
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:340/519, train_loss: 0.9575, step time: 0.5939
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:341/519, train_loss: 0.9728, step time: 0.6418
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:342/519, train_loss: 0.9859, step time: 0.6553
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:343/519, train_loss: 0.8865, step time: 0.5987
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:344/519, train_loss: 0.9336, step time: 0.5892
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:345/519, train_loss: 0.9042, step time: 0.6331
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:346/519, train_loss: 0.9639, step time: 0.6583
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:347/519, train_loss: 0.9197, step time: 0.6208
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:348/519, train_loss: 0.9796, step time: 0.5767
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:349/519, train_loss: 0.9690, step time: 0.5942
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:350/519, train_loss: 0.9894, step time: 0.6242
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:351/519, train_loss: 0.9642, step time: 0.6049
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:352/519, train_loss: 0.9474, step time: 0.6332
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:353/519, train_loss: 0.9231, step time: 0.5955
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:354/519, train_loss: 0.8854, step time: 0.6492
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:355/519, train_loss: 0.9033, step time: 0.6429
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:356/519, train_loss: 0.9313, step time: 0.6035
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:357/519, train_loss: 0.9591, step time: 0.5771
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:358/519, train_loss: 0.9798, step time: 0.5636
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:359/519, train_loss: 0.9345, step time: 0.5983
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:360/519, train_loss: 0.9336, step time: 0.6005
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:361/519, train_loss: 0.9598, step time: 0.5952
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:362/519, train_loss: 0.9210, step time: 0.5862
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:363/519, train_loss: 0.9777, step time: 0.6219
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:364/519, train_loss: 0.9691, step time: 0.5819
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:365/519, train_loss: 0.9602, step time: 0.6092
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:366/519, train_loss: 0.9138, step time: 0.5979
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:367/519, train_loss: 0.9613, step time: 0.5626
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:368/519, train_loss: 0.9899, step time: 0.6246
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:369/519, train_loss: 0.9284, step time: 0.6073
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:370/519, train_loss: 0.9242, step time: 0.6937
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:371/519, train_loss: 0.9238, step time: 0.6812
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:372/519, train_loss: 0.9598, step time: 0.6862
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:373/519, train_loss: 0.9216, step time: 0.6943
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:374/519, train_loss: 0.8992, step time: 0.6670
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:375/519, train_loss: 0.9312, step time: 0.6307
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:376/519, train_loss: 0.9898, step time: 0.6846
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:377/519, train_loss: 0.9557, step time: 0.6550
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:378/519, train_loss: 0.9660, step time: 0.7454
INFO:root:379/519, train_loss: 0.9123, step time: 0.6469
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:380/519, train_loss: 0.9170, step time: 0.6789
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:381/519, train_loss: 0.8792, step time: 0.7009
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:382/519, train_loss: 0.9472, step time: 0.7580
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:383/519, train_loss: 0.9891, step time: 0.7346
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:384/519, train_loss: 0.8713, step time: 0.6834
INFO:root:385/519, train_loss: 0.9428, step time: 0.6850
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:386/519, train_loss: 0.9092, step time: 0.6619
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:387/519, train_loss: 0.9424, step time: 0.6649
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:388/519, train_loss: 0.9030, step time: 0.6875
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:389/519, train_loss: 0.9232, step time: 0.6846
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:390/519, train_loss: 0.9566, step time: 0.7150
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:391/519, train_loss: 0.9691, step time: 0.7537
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:392/519, train_loss: 0.9791, step time: 0.6465
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:393/519, train_loss: 0.9020, step time: 0.7165
INFO:root:394/519, train_loss: 0.9827, step time: 0.7038
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:395/519, train_loss: 0.8856, step time: 0.7428
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:396/519, train_loss: 0.9827, step time: 0.7004
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:397/519, train_loss: 0.8954, step time: 0.6752
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:398/519, train_loss: 0.9936, step time: 0.6577
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:399/519, train_loss: 0.9871, step time: 0.6815
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:400/519, train_loss: 0.9832, step time: 0.6984
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:401/519, train_loss: 0.9497, step time: 0.6876
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:402/519, train_loss: 0.9332, step time: 0.6425
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:403/519, train_loss: 0.9083, step time: 0.7002
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:404/519, train_loss: 0.9118, step time: 0.7257
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:405/519, train_loss: 0.9546, step time: 0.7159
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:406/519, train_loss: 0.9548, step time: 0.6722
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:407/519, train_loss: 0.9819, step time: 0.6643
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:408/519, train_loss: 0.9406, step time: 0.6782
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:409/519, train_loss: 0.9259, step time: 0.7475
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:410/519, train_loss: 0.9051, step time: 0.6972
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:411/519, train_loss: 0.9639, step time: 0.6843
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:412/519, train_loss: 0.9777, step time: 0.6948
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:413/519, train_loss: 0.9066, step time: 0.7302
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:414/519, train_loss: 0.9291, step time: 0.6614
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:415/519, train_loss: 0.9015, step time: 0.6583
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:416/519, train_loss: 0.8980, step time: 0.7008
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:417/519, train_loss: 0.9847, step time: 0.6766
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:418/519, train_loss: 0.9681, step time: 0.5920
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:419/519, train_loss: 0.8934, step time: 0.6054
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:420/519, train_loss: 0.9675, step time: 0.5769
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:421/519, train_loss: 0.8900, step time: 0.6238
INFO:root:422/519, train_loss: 0.9105, step time: 0.6206
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:423/519, train_loss: 0.9026, step time: 0.5829
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:424/519, train_loss: 0.9764, step time: 0.5961
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:425/519, train_loss: 0.8676, step time: 0.5917
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:426/519, train_loss: 0.9296, step time: 0.5841
INFO:root:427/519, train_loss: 0.9222, step time: 0.5914
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:428/519, train_loss: 0.9593, step time: 0.6150
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:429/519, train_loss: 0.9106, step time: 0.5639
INFO:root:430/519, train_loss: 0.9976, step time: 0.6075
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:431/519, train_loss: 0.9317, step time: 0.6418
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:432/519, train_loss: 0.9012, step time: 0.6087
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:433/519, train_loss: 0.9832, step time: 0.5844
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:434/519, train_loss: 0.9941, step time: 0.6156
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:435/519, train_loss: 0.9514, step time: 0.6186
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:436/519, train_loss: 0.9610, step time: 0.5890
INFO:root:437/519, train_loss: 0.9040, step time: 0.6385
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:438/519, train_loss: 0.9762, step time: 0.5915
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:439/519, train_loss: 0.9316, step time: 0.6553
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:440/519, train_loss: 0.8839, step time: 0.6376
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:441/519, train_loss: 0.9715, step time: 0.5767
INFO:root:442/519, train_loss: 0.9528, step time: 0.6157
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:443/519, train_loss: 0.9234, step time: 0.6304
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:444/519, train_loss: 0.9197, step time: 0.6221
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:445/519, train_loss: 0.9563, step time: 0.5919
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:446/519, train_loss: 0.9453, step time: 0.6170
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:447/519, train_loss: 0.9246, step time: 0.5886
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:448/519, train_loss: 0.9737, step time: 0.6107
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:449/519, train_loss: 0.9125, step time: 0.5943
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:450/519, train_loss: 0.9776, step time: 0.6003
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:451/519, train_loss: 0.9279, step time: 0.6084
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:452/519, train_loss: 0.9954, step time: 0.6190
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:453/519, train_loss: 0.9378, step time: 0.5953
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:454/519, train_loss: 0.9442, step time: 0.5871
INFO:root:455/519, train_loss: 0.9862, step time: 0.5825
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:456/519, train_loss: 0.9694, step time: 0.6036
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:457/519, train_loss: 0.9432, step time: 0.6232
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:458/519, train_loss: 0.9525, step time: 0.6239
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:459/519, train_loss: 0.9347, step time: 0.6182
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:460/519, train_loss: 0.9493, step time: 0.6159
INFO:root:461/519, train_loss: 0.8822, step time: 0.6081
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:462/519, train_loss: 0.8630, step time: 0.5898
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:463/519, train_loss: 0.8888, step time: 0.5814
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:464/519, train_loss: 0.9305, step time: 0.5918
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:465/519, train_loss: 0.9727, step time: 0.5479
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:466/519, train_loss: 0.9840, step time: 0.5479
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:467/519, train_loss: 0.9256, step time: 0.7277
INFO:root:468/519, train_loss: 0.9191, step time: 0.6841
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:469/519, train_loss: 0.9784, step time: 0.6950
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:470/519, train_loss: 0.9701, step time: 0.6791
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:471/519, train_loss: 0.9513, step time: 0.6549
INFO:root:472/519, train_loss: 0.9125, step time: 0.6869
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:473/519, train_loss: 0.9668, step time: 0.7364
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:474/519, train_loss: 0.8892, step time: 0.6427
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:475/519, train_loss: 0.9951, step time: 0.6440
INFO:root:476/519, train_loss: 0.9141, step time: 0.7201
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:477/519, train_loss: 0.9288, step time: 0.6790
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:478/519, train_loss: 0.9137, step time: 0.6523
INFO:root:479/519, train_loss: 0.8965, step time: 0.6626
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:480/519, train_loss: 0.8900, step time: 0.6700
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:481/519, train_loss: 0.9225, step time: 0.6568
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:482/519, train_loss: 0.9300, step time: 0.6910
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:483/519, train_loss: 0.9413, step time: 0.6987
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:484/519, train_loss: 0.9098, step time: 0.7066
INFO:root:485/519, train_loss: 0.9185, step time: 0.6824
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:486/519, train_loss: 0.9724, step time: 0.7133
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:487/519, train_loss: 0.9376, step time: 0.6818
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:488/519, train_loss: 0.9202, step time: 0.7073
INFO:root:489/519, train_loss: 0.9337, step time: 0.6951
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:490/519, train_loss: 0.9773, step time: 0.6940
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:491/519, train_loss: 0.9730, step time: 0.6874
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:492/519, train_loss: 0.9406, step time: 0.6480
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:493/519, train_loss: 0.9696, step time: 0.6417
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:494/519, train_loss: 0.9013, step time: 0.6716
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:495/519, train_loss: 0.9179, step time: 0.6783
INFO:root:496/519, train_loss: 0.9578, step time: 0.6745
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:497/519, train_loss: 0.9642, step time: 0.6670
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:498/519, train_loss: 0.9081, step time: 0.6800
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:499/519, train_loss: 0.9303, step time: 0.6844
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:500/519, train_loss: 0.9091, step time: 0.6709
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:501/519, train_loss: 0.9048, step time: 0.6706
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:502/519, train_loss: 0.9214, step time: 0.7201
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:503/519, train_loss: 0.9853, step time: 0.6809
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:504/519, train_loss: 0.8895, step time: 0.7292
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:505/519, train_loss: 0.9216, step time: 0.6906
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:506/519, train_loss: 0.9058, step time: 0.6636
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:507/519, train_loss: 0.9696, step time: 0.7462
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:508/519, train_loss: 0.8975, step time: 0.6592
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:509/519, train_loss: 0.9726, step time: 0.5879
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:510/519, train_loss: 0.9055, step time: 0.6715
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:511/519, train_loss: 0.9322, step time: 0.7939
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:512/519, train_loss: 0.9475, step time: 0.6795
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:513/519, train_loss: 0.9725, step time: 0.6698
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:514/519, train_loss: 0.9310, step time: 0.6971
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:515/519, train_loss: 0.9354, step time: 0.6424
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:516/519, train_loss: 0.9710, step time: 0.6455
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:517/519, train_loss: 0.8932, step time: 0.6180
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:518/519, train_loss: 0.8845, step time: 0.5797
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:519/519, train_loss: 0.9834, step time: 0.5810
INFO:root:epoch 1 average loss: 0.9481
INFO:root:----------
INFO:root:epoch 2/200
saved new best metric model
current epoch: 1 current mean dice: 0.2280 N: 0.1120 E: 0.3890 TA: 0.1856
 best mean dice: 0.2280 at epoch: 1
time consuming of epoch 1 is: 2856.5296
INFO:root:1/519, train_loss: 0.8748, step time: 0.7146
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:2/519, train_loss: 0.9563, step time: 0.6536
INFO:root:3/519, train_loss: 0.9535, step time: 0.6558
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:4/519, train_loss: 0.9467, step time: 0.6552
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:5/519, train_loss: 0.9320, step time: 0.6569
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:6/519, train_loss: 0.8963, step time: 0.7112
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:7/519, train_loss: 0.8907, step time: 0.7000
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:8/519, train_loss: 0.9381, step time: 0.6633
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:9/519, train_loss: 0.9215, step time: 0.7714
INFO:root:10/519, train_loss: 0.9602, step time: 0.6830
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:11/519, train_loss: 0.9669, step time: 0.6298
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:12/519, train_loss: 0.9201, step time: 0.7094
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:13/519, train_loss: 0.8707, step time: 0.6757
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:14/519, train_loss: 0.9716, step time: 0.6501
INFO:root:15/519, train_loss: 0.9657, step time: 0.7270
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:16/519, train_loss: 0.8878, step time: 0.6182
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:17/519, train_loss: 0.9737, step time: 0.6061
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:18/519, train_loss: 0.8716, step time: 0.6127
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:19/519, train_loss: 0.8957, step time: 0.6386
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:20/519, train_loss: 0.9477, step time: 0.6033
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:21/519, train_loss: 0.9875, step time: 0.6363
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:22/519, train_loss: 0.9432, step time: 0.6355
INFO:root:23/519, train_loss: 0.9423, step time: 0.5915
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:24/519, train_loss: 0.9885, step time: 0.6164
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:25/519, train_loss: 0.9371, step time: 0.5769
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:26/519, train_loss: 0.8851, step time: 0.6026
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:27/519, train_loss: 0.9633, step time: 0.6241
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:28/519, train_loss: 0.9007, step time: 0.6323
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:29/519, train_loss: 0.9858, step time: 0.6128
INFO:root:30/519, train_loss: 0.9759, step time: 0.5821
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:31/519, train_loss: 0.9568, step time: 0.5941
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:32/519, train_loss: 0.9043, step time: 0.6127
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:33/519, train_loss: 0.9193, step time: 0.5837
INFO:root:34/519, train_loss: 0.8984, step time: 0.6056
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:35/519, train_loss: 0.9126, step time: 0.6269
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:36/519, train_loss: 0.8854, step time: 0.5956
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:37/519, train_loss: 0.9369, step time: 0.6125
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:38/519, train_loss: 0.9551, step time: 0.5923
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:39/519, train_loss: 0.9535, step time: 0.5725
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
INFO:root:40/519, train_loss: 0.9322, step time: 0.6052
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])
Traceback (most recent call last):
  File "/home/psalmon/SegResNet-UPENN/GBM_Seg_UPENN/train_with_upenn.py", line 423, in <module>
    main(config_train)
  File "/home/psalmon/SegResNet-UPENN/GBM_Seg_UPENN/train_with_upenn.py", line 319, in main
    scaler.step(optimizer)
  File "/home/psalmon/.local/lib/python3.10/site-packages/torch/cuda/amp/grad_scaler.py", line 452, in step
    retval = self._maybe_opt_step(optimizer, optimizer_state, *args, **kwargs)
  File "/home/psalmon/.local/lib/python3.10/site-packages/torch/cuda/amp/grad_scaler.py", line 349, in _maybe_opt_step
    if not sum(v.item() for v in optimizer_state["found_inf_per_device"].values()):
  File "/home/psalmon/.local/lib/python3.10/site-packages/torch/cuda/amp/grad_scaler.py", line 349, in <genexpr>
    if not sum(v.item() for v in optimizer_state["found_inf_per_device"].values()):
KeyboardInterrupt
Shape Inputs:  torch.Size([1, 4, 224, 224, 144])